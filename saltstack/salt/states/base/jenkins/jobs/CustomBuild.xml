<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>cnMaestro Server Release Build</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>COMMIT</name>
          <description>Please specify commit-id</description>
          <defaultValue>refs/heads/master</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BUILD_ID</name>
          <description>tag for build No â€“ CNS2_0_Build_8</description>
          <defaultValue>CNS2_0_Build_Test</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>DEPLOYMENT</name>
          <description>Two types of DEPLOYMENT: cloud or noc

1) Cloud deployment will be hosted in AWS without minifying server code
2) noc deployment will be hosted in VM with minified server code</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>CLOUD</string>
              <string>NOC</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>PMP</name>
          <description>Whether PMP is supported in the build</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.3.5">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>ssh://git@bitbucket.cambiumnetworks.com:7999/cnssng/cnssng.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${COMMIT}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#git tag -a 0.8.0-${BUILD_NUMBER} -m &apos;Created by Jenkins Automated Build&apos;
#git push --tags
#git tag

#prune old tags and always fetch latest tag
git fetch --prune origin +refs/tags/*:refs/tags/*

echo &quot;build starts...&quot;
git describe

rm -rf build
rm -rf build_debian

#clean the server node_modules folder
sudo rm -rf server/node_modules

pwd
ls

echo &quot;cnMaestro deployment type   :&quot; ${DEPLOYMENT}
echo &quot;PMP feature &quot; ${PMP}

npm install
grunt install:dist


#grunt build
if [ ${DEPLOYMENT} = &quot;CLOUD&quot; ] || [ ${DEPLOYMENT} = &quot;debian&quot; ] || [ ${DEPLOYMENT} = &quot;deb&quot; ]; then
  grunt build:debian:no --deployment cloud
elif [ ${DEPLOYMENT} = &quot;NOC&quot; ]; then
  grunt build:noc:no --deployment noc
fi


rm -rf build.tar
rm -rf test.tar

echo &quot;Build Time   :&quot; ${BUILD_TIMESTAMP} &gt;&gt; build/version.info
echo &quot;Build Number :&quot; ${BUILD_NUMBER} &gt;&gt; build/version.info
echo &quot;Build Version:&quot; ${GIT_COMMIT} &gt;&gt; build/version.info
echo &quot;Build ID     :&quot; ${BUILD_ID} &gt;&gt; build/version.info

#tar -cvzf build.tar build

cd test
grunt build

#echo &quot;Build Time   :&quot; ${BUILD_TIMESTAMP} &gt;&gt; build/version.info
#echo &quot;Build Number :&quot; ${BUILD_NUMBER} &gt;&gt; build/version.info
#echo &quot;Build Version:&quot; ${GIT_COMMIT} &gt;&gt; build/version.info
#echo &quot;Build ID     :&quot; ${BUILD_ID} &gt;&gt; build/version.info

tar -cvzf test.tar build
sudo -S mv test.tar ../
cd ..

if [ ! -d &quot;/home/ftpuser/${BUILD_ID}&quot; ]; then
  # Control will enter here if $DIRECTORY doesn&apos;t exist.
  sudo -S mkdir /home/ftpuser/${BUILD_ID}
fi

#delete all old build files for server
#sudo -S rm -rf /home/ftpuser/${BUILD_ID}/build.tar
#sudo -S rm -rf /home/ftpuser/${BUILD_ID}/test.tar
sudo -S rm -rf /home/ftpuser/${BUILD_ID}/cnmaestro-server*.deb

#delete all the .tar files
sudo -S rm -rf /home/ftpuser/${BUILD_ID}/*.tar
sudo -S rm -rf /home/ftpuser/${BUILD_ID}/*.tar.gz

#copy all new build files to ftp server
#sudo -S cp build.tar /home/ftpuser/${BUILD_ID}/
sudo -S cp test.tar /home/ftpuser/${BUILD_ID}/
sudo -S cp build_debian/*.deb /home/ftpuser/${BUILD_ID}/

cd /home/ftpuser/${BUILD_ID}
sudo tar -cvzf cnmaestro-packages_${BUILD_ID}-${BUILD_NUMBER}_all.tar.gz *.deb


#sudo tar -cvf cnmaestro-packages_${BUILD_ID}-${BUILD_NUMBER}_all.tar *.deb
#cd /home/ftpuser/sign_image
#python sign_image.py /home/ftpuser/${BUILD_ID}/cnmaestro-packages_${BUILD_ID}-${BUILD_NUMBER}_all.tar
#sudo mv signature sigserver-cert.pem /home/ftpuser/${BUILD_ID}
#cd /home/ftpuser/${BUILD_ID}
#sudo tar -cvzf cnmaestro-packages_${BUILD_ID}-${BUILD_NUMBER}_all.tar.gz *.tar signature cnmaestro-certificate.pem</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <htmlpublisher.HtmlPublisher plugin="htmlpublisher@1.3">
      <reportTargets/>
    </htmlpublisher.HtmlPublisher>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.39.3">
      <recipientList>ajay.singh@cambiumnetworks.com,rupam.khaitan@cambiumnetworks.com</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.FailureTrigger>
          <email>
            <recipientList></recipientList>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.FailureTrigger>
        <hudson.plugins.emailext.plugins.trigger.AlwaysTrigger>
          <email>
            <recipientList></recipientList>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.DevelopersRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.AlwaysTrigger>
      </configuredTriggers>
      <contentType>text/plain</contentType>
      <defaultSubject>cnMaestro Server Release Build:$BUILD_ID is $BUILD_STATUS</defaultSubject>
      <defaultContent>Hi All,

cnMaestro Server Release Build with id : $BUILD_ID is executed,

Build Status is $BUILD_URL :: $BUILD_STATUS

Build Artifacts: ftp://10.110.134.132/$BUILD_ID/
login : ftpuser/ftpuser
Commit: $GIT_COMMIT

Regards,
cnMaestro Team</defaultContent>
      <attachmentsPattern></attachmentsPattern>
      <presendScript>$DEFAULT_PRESEND_SCRIPT</presendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo>cnsng.qa@cambiumnetworks.com</replyTo>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
  </publishers>
  <buildWrappers/>
</project>